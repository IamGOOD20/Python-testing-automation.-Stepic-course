!!!! test_name_file.py  #  test_*.py или *_test.py

3.3 Тестирование с помощью PyTest
    pytest scripts/selenium_scripts # найти все тесты в директории scripts/selenium_scripts
    pytest test_user_interface.py # найти и выполнить все тесты в файле
    pytest scripts/drafts.py::test_register_new_user_parametrized # найти тест с именем test_register_new_user_parametrized
                                                                   в указанном файле в указанной директории и выполнить

        1. дальше происходит рекурсивный поиск: то есть PyTest обойдет все вложенные директории
        2. во всех директориях PyTest ищет файлы, которые удовлетворяют правилу  test_*.py или *_test.py
           (то есть начинаются на test_ или заканчиваются _test и имеют расширение .py)

        3. внутри всех этих файлов находит тестовые функции по следующему правилу:
            - все тесты, название которых начинается с test, которые находятся вне классов
            - все тесты, название которых начинается с test внутри классов,
              имя которых начинается с Test (и без метода __init__ внутри класса)
            https://docs.pytest.org/en/stable/goodpractices.html#conventions-for-python-test-discovery

    Usefull commands:
    pytest -v # make more colors in pytest report

    https://gist.github.com/amatellanes/12136508b816469678c2
    е элемента и намеренный вызов ошибки

with pytest.raises() - проверка на содержание элемента и намеренный вызов ошибки(редко используется)
    import pytest

    from selenium import webdriver
    from selenium.webdriver.common.by import By
    from selenium.common.exceptions import NoSuchElementException


    def test_exception1():
        try:
            browser = webdriver.Chrome()
            browser.get("http://selenium1py.pythonanywhere.com/")
            with pytest.raises(NoSuchElementException):
                browser.find_element(By.CSS_SELECTOR, "button.btn")
                pytest.fail("Не должно быть кнопки Отправить")
        finally:
            browser.quit()

    def test_exception2():
    try:
        browser = webdriver.Chrome()
        browser.get("http://selenium1py.pythonanywhere.com/")
        with pytest.raises(NoSuchElementException):
            browser.find_element(By.CSS_SELECTOR, "no_such_button.btn")
            pytest.fail("Не должно быть кнопки Отправить")
    finally:
        browser.quit()

3.4 Fixtures https://docs.pytest.org/en/latest/how-to/xunit_setup.html

